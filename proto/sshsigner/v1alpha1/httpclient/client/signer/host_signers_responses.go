// Code generated by go-swagger; DO NOT EDIT.

package signer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pardot/sshsigner/proto/sshsigner/v1alpha1/httpclient/models"
)

// HostSignersReader is a Reader for the HostSigners structure.
type HostSignersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HostSignersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHostSignersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewHostSignersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewHostSignersOK creates a HostSignersOK with default headers values
func NewHostSignersOK() *HostSignersOK {
	return &HostSignersOK{}
}

/*HostSignersOK handles this case with default header values.

A successful response.
*/
type HostSignersOK struct {
	/*Information about the cachability of the response
	 */
	CacheControl string

	Payload *models.V1alpha1HostSignersResponse
}

func (o *HostSignersOK) Error() string {
	return fmt.Sprintf("[GET /sshsigner/v1alpha1/hostsigners][%d] hostSignersOK  %+v", 200, o.Payload)
}

func (o *HostSignersOK) GetPayload() *models.V1alpha1HostSignersResponse {
	return o.Payload
}

func (o *HostSignersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	o.Payload = new(models.V1alpha1HostSignersResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHostSignersDefault creates a HostSignersDefault with default headers values
func NewHostSignersDefault(code int) *HostSignersDefault {
	return &HostSignersDefault{
		_statusCode: code,
	}
}

/*HostSignersDefault handles this case with default header values.

An unexpected error response
*/
type HostSignersDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the host signers default response
func (o *HostSignersDefault) Code() int {
	return o._statusCode
}

func (o *HostSignersDefault) Error() string {
	return fmt.Sprintf("[GET /sshsigner/v1alpha1/hostsigners][%d] HostSigners default  %+v", o._statusCode, o.Payload)
}

func (o *HostSignersDefault) GetPayload() *models.RuntimeError {
	return o.Payload
}

func (o *HostSignersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
