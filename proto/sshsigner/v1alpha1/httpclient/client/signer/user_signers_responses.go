// Code generated by go-swagger; DO NOT EDIT.

package signer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pardot/sshsigner/proto/sshsigner/v1alpha1/httpclient/models"
)

// UserSignersReader is a Reader for the UserSigners structure.
type UserSignersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserSignersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserSignersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserSignersOK creates a UserSignersOK with default headers values
func NewUserSignersOK() *UserSignersOK {
	return &UserSignersOK{}
}

/*UserSignersOK handles this case with default header values.

A successful response.
*/
type UserSignersOK struct {
	/*Information about the cachability of the response
	 */
	CacheControl string

	Payload *models.V1alpha1UserSignersResponse
}

func (o *UserSignersOK) Error() string {
	return fmt.Sprintf("[GET /sshsigner/v1alpha1/usersigners][%d] userSignersOK  %+v", 200, o.Payload)
}

func (o *UserSignersOK) GetPayload() *models.V1alpha1UserSignersResponse {
	return o.Payload
}

func (o *UserSignersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	o.Payload = new(models.V1alpha1UserSignersResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
